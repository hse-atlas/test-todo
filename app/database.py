from sqlalchemy import create_engine, exc
from sqlalchemy.orm import declarative_base, sessionmaker
from sqlalchemy.sql import text
import os
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DATABASE_URL = os.getenv("DATABASE_URL")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–≤–∏–∂–∫–∞ —Å –ø—É–ª–∏–Ω–≥–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
engine = create_engine(
    DATABASE_URL,
    pool_size=20,
    max_overflow=0,
    pool_pre_ping=True,
    echo=False  # –í–∫–ª—é—á–∏—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
SessionLocal = sessionmaker(
    autocommit=False,
    autoflush=False,
    expire_on_commit=False,
    bind=engine
)

Base = declarative_base()

def get_db():
    """
    –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–π –¥–ª—è Dependency Injection –≤ FastAPI
    """
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

def check_database_connection(retries: int = 5, delay: int = 3):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    """
    for attempt in range(1, retries + 1):
        try:
            with engine.connect() as conn:
                conn.execute(text("SELECT 1"))
                print("‚úÖ Database connection successful!")
                return True
        except exc.OperationalError as e:
            print(f"‚ö†Ô∏è Connection attempt {attempt}/{retries} failed: {str(e)}")
            if attempt < retries:
                print(f"üïí Retrying in {delay} seconds...")
                time.sleep(delay)
    raise RuntimeError("‚ùå Could not connect to the database after multiple attempts")

def create_tables():
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        print("üõ†  Creating database tables...")
        Base.metadata.create_all(bind=engine)
        print("‚úÖ Tables created successfully!")
    except exc.SQLAlchemyError as e:
        print(f"‚ùå Error creating tables: {str(e)}")
        raise

if __name__ == "__main__":
    # –î–ª—è –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É: python database.py
    try:
        check_database_connection()
        create_tables()
    except Exception as e:
        print(f"üî¥ Critical error during startup: {str(e)}")
        exit(1)